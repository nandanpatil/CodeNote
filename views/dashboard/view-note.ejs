<div class="container-fluid container-fluid-custom pb-5 mb-5">

  <div class="row mb-4">
    <div class="col">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
          <li class="breadcrumb-item active"><%= note.title %></li>
        </ol>
      </nav>
      <div class="col d-flex justify-content-between align-items-center">
        <h1 class="h3">View Note</h1>
        <button type="button" class="btn btn-danger me-2" data-bs-toggle="modal" id="deleteButton" data-bs-target="#deleteModal">
          Delete
        </button>
      </div>
    </div>
  </div>


  <form action="/dashboard/item-update/<%= note._id %>?_method=PUT" method="POST" class="mx-auto" style="width: 80%; margin-left: 10%; margin-right: 10%;">
      <% if(note.isQuestion){ %>
      <div class="d-flex align-items-center">
        <label for="questionUrl" class="me-2">Question URL:</label>
        <input type="text" class="form-control me-2" id="questionUrl" name="questionUrl" style="flex-grow: 1;" value="<%= note.questionUrl %>">
        <button type="button" id="fetchButton" class="btn btn-primary">View</button>
      </div>
      <% } %>
   

    <div class="form-group mb-2">
      <textarea class="form-control fw-bold border-0 fs-4" id="title" name="title" placeholder="Title" required style=" height: 8px;"><%= note.title %></textarea>
    </div>

    <div id="fetchResult" class="form-group mb-2 bg-light px-2 "></div> 

    <% if(note.isQuestion){ %>
      <textarea id="codeInput" name="codeInput" id="codeInput" class="form-control fs-4 " rows="10" placeholder="Code"><%= note.solution %></textarea>
      <% } %>

      <div id="Complexity" class="pt-2 form-group mb-2 bg-light px-2 "></div> 

    <div class="form-group mb-2">
      <textarea required class="form-control fs-4" id="body" name="body" placeholder="Take a note..." rows="6"><%= note.body %></textarea>
    </div>

    <div class="form-group">
      <button type="submit" class="btn btn-primary btn-lg">Update</button>
      <% if(note.isQuestion){ %>
      <button type="button" id="fetchComplexity" class="btn btn-primary btn-lg">Complexity</button>
        <% } %>
    </div>
  </form>
</div>



<div class="modal fade" tabindex="-1" role="dialog" id="deleteModal">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">You are about to delete a note</h5>
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>
          This will delete your note <b class="fw-bold"><%= note.title %></b><br/>
          Are you sure?
        </p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
  
        <form action="/dashboard/item-delete/<%= note._id %>?_method=DELETE" method="POST" class="position-relative">
          <button type="submit" class="btn btn-primary">Delete Note</button>
        </form>
        
      </div>
    </div>
  </div>
</div>
<script>
document.getElementById('fetchButton').addEventListener('click', function() {
  const questionUrl = document.getElementById('questionUrl').value;

  // Send AJAX request to fetch data from backend
  fetch('/dashboard/fetchQuestion', {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify({ questionUrl: questionUrl })
  })
  .then(response => {
      if (!response.ok) {
          throw new Error('Failed to fetch data');
      }
      return response.json(); // Assuming the response is JSON
  })
  .then(data => {
      // Render fetched data based on its structure
      let htmlContent = '';

      // Check the type of data and construct HTML accordingly
      
      htmlContent = data.description;

      // Set the innerHTML of fetchResult with the constructed HTML content
      document.getElementById('fetchResult').innerHTML = htmlContent;
      document.getElementById('title').innerText = data.title;
  })
  .catch(error => {
      console.error('Error fetching data:', error);
      alert('Failed to fetch data. Please try again later.'); // Prompt user with an alert
  });
});


document.getElementById('fetchComplexity').addEventListener('click', function() {
  const solution = document.getElementById('codeInput').value;
  try {
    if(solution.length==0){
    throw new Error('No Code is Provided');
  }  
  } catch (error) {
  return  alert('No Code is Provided');
  }
  
  // Send AJAX request to fetch data from backend
  fetch('/dashboard/fetchComplexity', {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify({ soltn: solution })
  })
  .then(response => {
      if (!response.ok) {
          throw new Error('Failed to fetch data');
      }
      return response.json(); // Assuming the response is JSON
  })
  .then(data => {
      // Render fetched data based on its structure
      let htmlContent = '';

      // Check the type of data and construct HTML accordingly
      
      htmlContent = data.description;

      // Set the innerHTML of fetchResult with the constructed HTML content
      document.getElementById('Complexity').innerHTML = htmlContent;
  })
  .catch(error => {
      console.error('Error fetching data:', error);
      alert('Failed to fetch data. Please try again later.'); // Prompt user with an alert
  });
});




</script>